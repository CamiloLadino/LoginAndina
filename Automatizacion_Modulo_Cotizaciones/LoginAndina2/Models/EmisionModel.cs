using LoginAndina2;
using OpenQA.Selenium;
using LoginAndina2.Object;

namespace LoginAndina2.Models;

public class EmisionModel
{
    private IWebDriver driver;
    private emisionLocalizadores emisionL = null!;

    public EmisionModel(IWebDriver driver)
    {
        this.driver = driver;
        this.emisionL = new emisionLocalizadores(driver);
    }

    public void EmisionPol()
    {
        try
        {
            Console.WriteLine("üîë Desplegando SubMenu de Emisi√≥n...");
            emisionL.IngresarEmision();
            Console.WriteLine("‚úÖ Menu de emisi√≥n desplegado exitosamente");
            
            // Esperar a que la p√°gina se cargue completamente
            emisionL.EsperarCargaPaginaEmision();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå Error durante la navegaci√≥n al men√∫ de emisi√≥n: {ex.Message}");
            throw;
        }
    }

    public void EmisionPolMas()
    {
        try
        {
            Console.WriteLine("üîÑ Seleccionando m√∫ltiples p√≥lizas...");
            emisionL.EmitirMasPol();
            Console.WriteLine("‚úÖ M√∫ltiples p√≥lizas seleccionadas y emitidas exitosamente");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå Error en la selecci√≥n de m√∫ltiples p√≥lizas: {ex.Message}");
            throw;
        }
    }

    public void EmisionPolOne(string numeroCotizacion = "COT-00002023")
    {
        try
        {
            Console.WriteLine($"üîÑ Seleccionando p√≥liza individual: {numeroCotizacion}...");
            emisionL.EmitirOnePol(numeroCotizacion);
            Console.WriteLine($"‚úÖ P√≥liza {numeroCotizacion} seleccionada y emitida exitosamente");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå Error durante la selecci√≥n de la cotizaci√≥n {numeroCotizacion}: {ex.Message}");
            throw;
        }
    }

    /// <summary>
    /// M√©todo para probar con diferentes n√∫meros de cotizaci√≥n
    /// </summary>
    // public void EmisionPolOneConReintento(string numeroCotizacion = "COT-00002024")
    // {
    //     const int maxReintentos = 3;
        
    //     for (int intento = 1; intento <= maxReintentos; intento++)
    //     {
    //         try
    //         {
    //             Console.WriteLine($"üîÑ Intento {intento}/{maxReintentos}: Seleccionando p√≥liza {numeroCotizacion}...");
    //             emisionL.EmitirOnePol(numeroCotizacion);
    //             Console.WriteLine($"‚úÖ P√≥liza {numeroCotizacion} emitida exitosamente en el intento {intento}");
    //             return; // √âxito, salir del loop
    //         }
    //         catch (Exception ex)
    //         {
    //             Console.WriteLine($"‚ùå Intento {intento} fall√≥: {ex.Message}");
                
    //             if (intento == maxReintentos)
    //             {
    //                 Console.WriteLine($"‚ùå Todos los intentos fallaron para la cotizaci√≥n {numeroCotizacion}");
    //                 throw;
    //             }
                
    //             // Esperar antes del siguiente intento
    //             Thread.Sleep(2000);
    //         }
    //     }
    // }
}